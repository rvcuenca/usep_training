[["index.html", "Day 4: One-Way and Two-Way ANOVA using R Topics Covered", " Day 4: One-Way and Two-Way ANOVA using R Rey R. Cuenca1 December 1, 2021 Topics Covered One-Way ANOVA Data Entry and Data Manipulation Hypothesis Testing Checking Assumptions Two-Way ANOVA Data Entry and Data Manipulation Hypothesis Testing Checking Assumptions MSU-Iligan Institute of Technology, rey.cuenca@g.msuiit.edu.ph "],["preliminaries.html", "1 Preliminaries 1.1 Setting Up RStudio 1.2 Installing the needed R packages", " 1 Preliminaries 1.1 Setting Up RStudio In order for us to be on the same page all throughout the discussion, set up RStudio as explained in the following video. 1.2 Installing the needed R packages install.packages(c(&quot;tidyverse&quot;,&quot;ggpubr&quot;,&quot;rstatix&quot;,&quot;markdown&quot;,&quot;rmarkdown&quot;,&quot;tinytex&quot;)) "],["data-entry.html", "2 Data Entry", " 2 Data Entry Load the necessary packages. library(tidyverse) ## -- Attaching packages --------------------------------------- tidyverse 1.3.1 -- ## v ggplot2 3.3.5 v purrr 0.3.4 ## v tibble 3.1.6 v dplyr 1.0.7 ## v tidyr 1.1.4 v stringr 1.4.0 ## v readr 2.1.0 v forcats 0.5.1 ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(ggpubr) library(multcomp) ## Loading required package: mvtnorm ## Loading required package: survival ## Loading required package: TH.data ## Loading required package: MASS ## ## Attaching package: &#39;MASS&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## select ## ## Attaching package: &#39;TH.data&#39; ## The following object is masked from &#39;package:MASS&#39;: ## ## geyser Load data to R using read_csv() function of the readr package of tidyverse and save it with a variable name oneway_data. # Load and save oneway_data &lt;- read_csv(file = &quot;data/Tubo-USEP_One-Way Cleaned Data for R.csv&quot;) # Preview oneway_data ## # A tibble: 5 x 5 ## Observation Colorless Pink Orange Green ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 26.5 31.2 27.9 30.8 ## 2 2 28.7 28.3 25.1 29.6 ## 3 3 25.1 30.8 28.5 32.4 ## 4 4 29.1 27.9 24.2 31.7 ## 5 5 27.2 29.6 26.5 32.8 "],["data-manipulation.html", "3 Data Manipulation", " 3 Data Manipulation oneway_data %&gt;% gather(key = &quot;Type&quot;, value = &quot;Sales&quot;, -Observation) %&gt;% # mutate(across(c(Observation,Type), ~as_factor(.x))) mutate(across(Observation:Type, ~as_factor(.x))) -&gt; clean_oneway_data clean_oneway_data ## # A tibble: 20 x 3 ## Observation Type Sales ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 1 Colorless 26.5 ## 2 2 Colorless 28.7 ## 3 3 Colorless 25.1 ## 4 4 Colorless 29.1 ## 5 5 Colorless 27.2 ## 6 1 Pink 31.2 ## 7 2 Pink 28.3 ## 8 3 Pink 30.8 ## 9 4 Pink 27.9 ## 10 5 Pink 29.6 ## 11 1 Orange 27.9 ## 12 2 Orange 25.1 ## 13 3 Orange 28.5 ## 14 4 Orange 24.2 ## 15 5 Orange 26.5 ## 16 1 Green 30.8 ## 17 2 Green 29.6 ## 18 3 Green 32.4 ## 19 4 Green 31.7 ## 20 5 Green 32.8 str(clean_oneway_data) ## tibble [20 x 3] (S3: tbl_df/tbl/data.frame) ## $ Observation: Factor w/ 5 levels &quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,..: 1 2 3 4 5 1 2 3 4 5 ... ## $ Type : Factor w/ 4 levels &quot;Colorless&quot;,&quot;Pink&quot;,..: 1 1 1 1 1 2 2 2 2 2 ... ## $ Sales : num [1:20] 26.5 28.7 25.1 29.1 27.2 31.2 28.3 30.8 27.9 29.6 ... clean_oneway_data %&gt;% sample_n(10) ## # A tibble: 10 x 3 ## Observation Type Sales ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 2 Colorless 28.7 ## 2 1 Colorless 26.5 ## 3 2 Orange 25.1 ## 4 1 Pink 31.2 ## 5 5 Pink 29.6 ## 6 3 Green 32.4 ## 7 4 Green 31.7 ## 8 4 Colorless 29.1 ## 9 5 Orange 26.5 ## 10 3 Pink 30.8 levels(clean_oneway_data$Type) ## [1] &quot;Colorless&quot; &quot;Pink&quot; &quot;Orange&quot; &quot;Green&quot; "],["data-visualization.html", "4 Data Visualization", " 4 Data Visualization clean_oneway_data %&gt;% ggboxplot(x = &quot;Type&quot;, y = &#39;Sales&#39;, fill = &quot;Type&quot;, palette = c(&quot;white&quot;, &quot;pink&quot;, &quot;orange&quot;, &quot;green&quot;)) + theme(legend.position = &quot;none&quot;) "],["hypothesis-testing.html", "5 Hypothesis Testing", " 5 Hypothesis Testing The One-Way ANOVA Table in R one_aov &lt;- clean_oneway_data %&gt;% aov(formula = Sales ~ Type, data = .) one_aov %&gt;% summary ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Type 3 76.85 25.615 10.49 0.000466 *** ## Residuals 16 39.08 2.443 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 In the table, Df  degress of freedom Sum Sq  sum of squares Mean Sq  mean sum of squares F value  value of \\(F\\) statistic Pr(&gt;F)  \\(p\\)-value Thus, from the table \\[\\begin{align} SSB &amp;= 76.85 &amp; MSB &amp;= 25.615 &amp; F = 10.49\\\\ SSE &amp;= 39.08 &amp; MSE &amp;= 2.443 &amp; \\\\ \\end{align}\\] Similar to when you look up at an F-table, the p-value can be computed using the following R code. pf(q = 10.49, df1 = 3, df2 = 16, lower.tail = F) ## [1] 0.0004652698 "],["checking-assumptions.html", "6 Checking Assumptions2 6.1 Checking Normality Assumptions 6.2 Checking Homogeneity of Variance Assumption", " 6 Checking Assumptions2 6.1 Checking Normality Assumptions Shapiro-Wilk Test The Shapiro-Wilk test tests the null hypothesis that the samples come from a normal distribution against the alternative hypothesis that the samples do not come from a normal distribution. oneway_data[-1,] %&gt;% rstatix::shapiro_test(Colorless,Pink,Orange,Green) ## # A tibble: 4 x 3 ## variable statistic p ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Colorless 0.913 0.499 ## 2 Green 0.881 0.342 ## 3 Orange 0.965 0.813 ## 4 Pink 0.937 0.635 shapiro.test(residuals(object = one_aov)) ## ## Shapiro-Wilk normality test ## ## data: residuals(object = one_aov) ## W = 0.92472, p-value = 0.1222 QQ Plots clean_oneway_data %&gt;% mutate(Residual = one_aov$residuals) %&gt;% ggplot(aes(sample = Residual)) + stat_qq() + stat_qq_line() + facet_wrap(~Type) plot(one_aov,2) Histogram clean_oneway_data %&gt;% ggplot(aes(x = Sales)) + geom_histogram(bins = 30, color = &quot;white&quot;) + geom_density() + facet_wrap(~Type) 6.2 Checking Homogeneity of Variance Assumption Bartlets Test Bartletts test tests the null hypothesis that the group variances are equal against the alternative hypothesis that the group variances are not equal. clean_oneway_data %&gt;% bartlett.test(Sales ~ Type, data = .) ## ## Bartlett test of homogeneity of variances ## ## data: Sales by Type ## Bartlett&#39;s K-squared = 0.46564, df = 3, p-value = 0.9264 clean_oneway_data %&gt;% ggboxplot(x = &quot;Type&quot;, y = &#39;Sales&#39;, fill = &quot;Type&quot;, palette = c(&quot;white&quot;, &quot;pink&quot;, &quot;orange&quot;, &quot;green&quot;)) + theme(legend.position = &quot;none&quot;) The variability within each group is represented by the vertical size of each box; i.e., the interquartile range (IQR). The boxplot shows that the variability is roughly equal for each group. Lets look at some more ways to test the homogeneity of variance assumption. Residual vs.Â Fitted Values Plot plot(one_aov,1, las=1) This plot shows the residuals (errors) on the y-axis and the fitted values (predicted values) on the x-axis. If the variance of each group is equal, the plot should show no pattern; in other words, the points should look like a cloud of random points. The plot shows that the variances are approximately homogenous since the residuals are distributed approximately equally above and below zero. Standardised Residuals vs Fitted values Plot plot(one_aov,3) The more coincident the red line plot to the horizontal line at 1, the lesser possibility the violation of the homogeneity of variance assumption. Except for most of the codes, the contents of this section are obtained from this link "],["post-hoc.html", "7 Post-hoc 7.1 TukeyHSD (Tukeys Honestly-Significant Difference) post-hoc test in R 7.2 Using TukeyHSD of stats package 7.3 Using the multicomp package with Tukey option", " 7 Post-hoc 7.1 TukeyHSD (Tukeys Honestly-Significant Difference) post-hoc test in R There are at least two ways to perform a Tukeys HSD post-hoc in R. One is by using the TukeyHSD function of the pre-installed R package stats. The second is the glht function with \"Tukey\" option bundled along with the multcomp package. 7.2 Using TukeyHSD of stats package TukeyHSD(one_aov) ## Tukey multiple comparisons of means ## 95% family-wise confidence level ## ## Fit: aov(formula = Sales ~ Type, data = .) ## ## $Type ## diff lwr upr p adj ## Pink-Colorless 2.24 -0.5880714 5.0680714 0.1479369 ## Orange-Colorless -0.88 -3.7080714 1.9480714 0.8099459 ## Green-Colorless 4.14 1.3119286 6.9680714 0.0034923 ## Orange-Pink -3.12 -5.9480714 -0.2919286 0.0281177 ## Green-Pink 1.90 -0.9280714 4.7280714 0.2580535 ## Green-Orange 5.02 2.1919286 7.8480714 0.0005837 Discussion of Results. Picking up from the significant ANOVA result in our soft drink data, the Tukeys HSD post-hoc analysis result above shows the following significant comparisons at \\(0.05\\): cat(&quot;Avg. Sales Comparison\\t P-value (adjusted)\\n---------------------------------------------\\nGreen &gt; Colorless\\t 0.0034923\\nGreen &gt; Orange\\t\\t 0.0005837\\nOrange &gt; Pink\\t\\t 0.0281177\\n---------------------------------------------\\n&quot;) ## Avg. Sales Comparison P-value (adjusted) ## --------------------------------------------- ## Green &gt; Colorless 0.0034923 ## Green &gt; Orange 0.0005837 ## Orange &gt; Pink 0.0281177 ## --------------------------------------------- 7.3 Using the multicomp package with Tukey option summary(glht(one_aov, linfct = mcp(Type = &quot;Tukey&quot;))) ## ## Simultaneous Tests for General Linear Hypotheses ## ## Multiple Comparisons of Means: Tukey Contrasts ## ## ## Fit: aov(formula = Sales ~ Type, data = .) ## ## Linear Hypotheses: ## Estimate Std. Error t value Pr(&gt;|t|) ## Pink - Colorless == 0 2.2400 0.9885 2.266 0.14815 ## Orange - Colorless == 0 -0.8800 0.9885 -0.890 0.80991 ## Green - Colorless == 0 4.1400 0.9885 4.188 0.00339 ** ## Orange - Pink == 0 -3.1200 0.9885 -3.156 0.02817 * ## Green - Pink == 0 1.9000 0.9885 1.922 0.25800 ## Green - Orange == 0 5.0200 0.9885 5.078 &lt; 0.001 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## (Adjusted p values reported -- single-step method) "],["data-entry-1.html", "8 Data Entry3", " 8 Data Entry3 Load data to R using read_csv() function of the readr package of tidyverse and save it with a variable name twoway_data. # Load and save twoway_data &lt;- read_csv(file = &quot;data/Tubo-USEP_Two-Way Cleaned Data for R.csv&quot;) # Preview twoway_data ## # A tibble: 4 x 7 ## Fertilizer Manure P1 P2 P3 P4 P5 ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 High High 13.7 15.8 13.9 16.6 15.5 ## 2 High Low 16.4 12.5 14.1 14.4 12.2 ## 3 Low High 15 15.1 12 15.7 12.2 ## 4 Low Low 12.4 10.6 13.7 8.7 10.9 The contents of the succeeding sections are obtained from this link "],["data-manipulation-1.html", "9 Data Manipulation", " 9 Data Manipulation twoway_data%&gt;% gather(key = Plot, value = Yield, -c(Fertilizer,Manure)) %&gt;% mutate(across(Fertilizer:Plot, ~ as.factor(.x))) -&gt; clean_twoway_data # Structure preview str(clean_twoway_data) ## tibble [20 x 4] (S3: tbl_df/tbl/data.frame) ## $ Fertilizer: Factor w/ 2 levels &quot;High&quot;,&quot;Low&quot;: 1 1 2 2 1 1 2 2 1 1 ... ## $ Manure : Factor w/ 2 levels &quot;High&quot;,&quot;Low&quot;: 1 2 1 2 1 2 1 2 1 2 ... ## $ Plot : Factor w/ 5 levels &quot;P1&quot;,&quot;P2&quot;,&quot;P3&quot;,..: 1 1 1 1 2 2 2 2 3 3 ... ## $ Yield : num [1:20] 13.7 16.4 15 12.4 15.8 12.5 15.1 10.6 13.9 14.1 ... # Sample preview clean_twoway_data %&gt;% sample_n(10) ## # A tibble: 10 x 4 ## Fertilizer Manure Plot Yield ## &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 High High P3 13.9 ## 2 Low Low P5 10.9 ## 3 High High P2 15.8 ## 4 High Low P4 14.4 ## 5 High High P5 15.5 ## 6 High Low P2 12.5 ## 7 Low High P3 12 ## 8 High High P1 13.7 ## 9 High Low P3 14.1 ## 10 Low Low P3 13.7 "],["data-visualization-1.html", "10 Data Visualization", " 10 Data Visualization ggboxplot(clean_twoway_data, x = &quot;Fertilizer&quot;, y = &quot;Yield&quot;, fill = &quot;Manure&quot;) "],["hypothesis-testing-1.html", "11 Hypothesis Testing 11.1 The Two-Way ANOVA Table with Main Effects Only 11.2 The Two-Way ANOVA Table with Interactions", " 11 Hypothesis Testing 11.1 The Two-Way ANOVA Table with Main Effects Only two_aov &lt;- clean_twoway_data %&gt;% aov(formula = Yield ~ Fertilizer + Manure, data = .) two_aov %&gt;% summary ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Fertilizer 1 17.67 17.672 6.332 0.0222 * ## Manure 1 19.21 19.208 6.883 0.0178 * ## Residuals 17 47.44 2.791 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Similar to the One-Way ANOVA table, Df  degress of freedom Sum Sq  sum of squares Mean Sq  mean sum of squares F value  value of \\(F\\) statistic Pr(&gt;F)  \\(p\\)-value Thus, from the table \\[\\begin{align} SSR &amp;= 17.67 &amp; MSR &amp;= 17.672 &amp; F_C = 6.332\\\\ SSC &amp;= 19.21 &amp; MSC &amp;= 19.208 &amp; F_R = 6.883\\\\ SSE &amp;= 47.44 &amp; MSE &amp;= 2.791 &amp; \\\\ \\end{align}\\] Similar to when you look up at an F-table, the p-values can be computed using the following R code. pf(q = 6.332, df1 = 1, df2 = 17, lower.tail = F) ## [1] 0.02219209 pf(q = 6.883, df1 = 1, df2 = 17, lower.tail = F) ## [1] 0.01779112 11.2 The Two-Way ANOVA Table with Interactions two_aov2 &lt;- clean_twoway_data %&gt;% aov(formula = Yield ~ Fertilizer*Manure, data = .) two_aov2 %&gt;% summary ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Fertilizer 1 17.67 17.672 6.368 0.0226 * ## Manure 1 19.21 19.208 6.922 0.0182 * ## Fertilizer:Manure 1 3.04 3.042 1.096 0.3107 ## Residuals 16 44.40 2.775 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 The interaction is not significant so we proceed on using the additive model (i.e., main-effects only). "],["checking-assumptions-1.html", "12 Checking Assumptions 12.1 Checking Normality Assumptions 12.2 Checking Homogeneity of Variance Assumption", " 12 Checking Assumptions 12.1 Checking Normality Assumptions Shapiro-Wilk Test The Shapiro-Wilk test tests the null hypothesis that the samples come from a normal distribution against the alternative hypothesis that the samples do not come from a normal distribution. shapiro.test(residuals(two_aov)) ## ## Shapiro-Wilk normality test ## ## data: residuals(two_aov) ## W = 0.9634, p-value = 0.6138 QQ Plots plot(two_aov, 2) 12.2 Checking Homogeneity of Variance Assumption par(mfrow=c(2,2)) plot(two_aov) par(mfrow=c(1,1)) "],["post-hoc-1.html", "13 Post-hoc", " 13 Post-hoc We no longer need a posthoc analysis since we only have two levels in each of the significant factors. However, for the sake of illustration, we could be simply run the following code TukeyHSD(two_aov) ## Tukey multiple comparisons of means ## 95% family-wise confidence level ## ## Fit: aov(formula = Yield ~ Fertilizer + Manure, data = .) ## ## $Fertilizer ## diff lwr upr p adj ## Low-High -1.88 -3.456219 -0.3037812 0.022188 ## ## $Manure ## diff lwr upr p adj ## Low-High -1.96 -3.536219 -0.3837812 0.0177922 "],["mean-line-or-interaction-plots.html", "14 Mean Line or Interaction Plots", " 14 Mean Line or Interaction Plots ggline(clean_twoway_data, x = &quot;Fertilizer&quot;, y = &quot;Yield&quot;, color = &quot;Manure&quot;, add = c(&quot;mean_se&quot;)) The above figure supports the result before that there is no significant interaction between the two factors. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
